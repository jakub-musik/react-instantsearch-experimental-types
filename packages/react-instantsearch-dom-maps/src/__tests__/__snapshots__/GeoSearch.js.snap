// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeoSearch Connector expect to render 1`] = `
<ConnectorWrapper
  defaultRefinement={null}
  enableRefineOnMapMove={true}
  testID="Connector"
>
  <Component />
</ConnectorWrapper>
`;

exports[`GeoSearch Connector expect to render with defaultRefinement 1`] = `
<ConnectorWrapper
  defaultRefinement={
    Object {
      "northEast": Object {
        "lat": 10,
        "lng": 12,
      },
      "southWest": Object {
        "lat": 12,
        "lng": 14,
      },
    }
  }
  enableRefineOnMapMove={true}
  testID="Connector"
>
  <Component />
</ConnectorWrapper>
`;

exports[`GeoSearch Connector expect to render with enableRefineOnMapMove 1`] = `
<ConnectorWrapper
  defaultRefinement={null}
  enableRefineOnMapMove={false}
  testID="Connector"
>
  <Component />
</ConnectorWrapper>
`;

exports[`GeoSearch GoogleMaps expect to render 1`] = `
<GoogleMaps
  google={
    Object {
      "maps": Object {
        "ControlPosition": Object {
          "LEFT_TOP": "left:top",
        },
        "LatLng": [MockFunction],
        "LatLngBounds": [MockFunction],
        "Map": [MockFunction],
        "Marker": [MockFunction],
        "OverlayView": [Function],
        "event": Object {
          "addListenerOnce": [MockFunction],
        },
      },
    }
  }
  initialPosition={
    Object {
      "lat": 0,
      "lng": 0,
    }
  }
  initialZoom={1}
  mapOptions={Object {}}
  onChange={[Function]}
  onIdle={[Function]}
  shouldUpdate={[Function]}
  testID="GoogleMaps"
>
  <div>
    Hello this is the children
  </div>
</GoogleMaps>
`;

exports[`GeoSearch Provider expect to render 1`] = `
<Provider
  google={
    Object {
      "maps": Object {
        "ControlPosition": Object {
          "LEFT_TOP": "left:top",
        },
        "LatLng": [MockFunction],
        "LatLngBounds": [MockFunction],
        "Map": [MockFunction],
        "Marker": [MockFunction],
        "OverlayView": [Function],
        "event": Object {
          "addListenerOnce": [MockFunction],
        },
      },
    }
  }
  hasMapMoveSinceLastRefine={false}
  hits={Array []}
  isRefineEnable={true}
  isRefineOnMapMove={true}
  refine={[Function]}
  setMapMoveSinceLastRefine={[Function]}
  testID="Provider"
  toggleRefineOnMapMove={[Function]}
>
  <Component />
</Provider>
`;
