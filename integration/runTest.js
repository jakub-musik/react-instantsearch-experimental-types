const { join } = require('path');
const { execSync } = require('child_process');
const createStorybook = require('@storybook/react/standalone');
const puppeteer = require('puppeteer');
const takeScreenshot = require('./takeScreenshot');

// The file is generated by Webpack since because it loads the stories
const getStorybookStories = require('./dist/getStorybookStoriesBundle');

const host = process.env.HOST || '127.0.0.1';
const port = process.env.PORT || 8080;

(async () => {
  const screenshotsPath = join(__dirname, 'screenshots');
  const storybookPath = join(__dirname, '..', 'storybook');

  execSync(`rm -rf "${screenshotsPath}"`);
  execSync(`mkdir "${screenshotsPath}"`);

  await createStorybook({
    mode: 'dev',
    staticDir: [join(storybookPath, 'public')],
    configDir: storybookPath,
    quiet: true,
    ci: true,
    host,
    port,
  });

  const stories = getStorybookStories({
    host,
    port,
  });

  const browser = await puppeteer.launch({
    args: ['--no-sandbox', '--disable-setuid-sandbox'],
  });

  const page = await browser.newPage();

  await page.setViewport({ width: 640, height: 888 });

  console.log('Screenshots in progress...');

  for (const story of stories) {
    await takeScreenshot({
      screenshotsPath,
      story,
      page,
    });
  }

  console.log('Screenshots are done.');

  await browser.close();

  process.exit();
})();
